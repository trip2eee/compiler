%{
class Symbol:
    def __init__(self):
        self.type = None
        self.value = None
        self.pattern = None
        self.prev = None
        self.next = None

class Pattern:
    VALUE = 0
    RANGE = 1
    OR = 2
    PARENT = 3

    def __init__(self):
        self.type = Pattern.VALUE
        self.value = None
        self.range_min = None
        self.range_max = None
        self.list = []
        self.min_repeat = 1
        self.max_repeat = 1
        self.matched = False

%}

%%

CMD : EXP {
    $$ = $1
};

EXP : SUBEXP EXP {    
    $1.next = $2
    $2.prev = $1
    $$ = $1
} |
SUBEXP |
EXP OR SUBEXP
;

SUBEXP : CLS |
CHAR {
    pattern = Pattern()
    pattern.type = Pattern.VALUE
    pattern.value = $1.value
    $$.pattern = pattern
} |
GROUP |
SUBEXP COUNT
;

GROUP : ( EXP ) {
    $$ = $2
}
;

CLS : [ TERM ] {
    pattern = Pattern()
    pattern.type = Pattern.OR
    s = $2
    while s is not None:
        pattern.list.append(s.pattern)
        s = s.next
    $$.pattern = pattern
};

TERM : FACTOR TERM {    
    $1.next = $2
    $2.prev = $1
    $$ = $1
} |
FACTOR | 
FACTOR -
;

FACTOR : CHAR {
    pattern = Pattern()
    pattern.type = Pattern.VALUE
    pattern.value = $1.value
    $$.pattern = pattern
} |
CHAR - CHAR {
    pattern = Pattern()
    pattern.type = Pattern.RANGE
    pattern.range_min = $1.value
    pattern.range_max = $3.value
    $$.pattern = pattern
} |
ESC
;

COUNT : + {
    $$.min_repeat = 0
    $$.max_repeat = -1
} |
* {
    $$.min_repeat = 1
    $$.max_repeat = -1
}| 
? {
    $$.min_repeat = 0
    $$.max_repeat = 1
}
;
%%

